// package.json (Root)
{
  "name": "teamx-monorepo",
  "version": "1.0.0",
  "description": "TeamX İş Yönetimi Platformu",
  "private": true,
  "workspaces": ["apps/*"],
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:web\"",
    "dev:api": "cd apps/api && npm run start:dev",
    "dev:web": "cd apps/web && npm run dev",
    "setup": "npm run setup:db && npm run setup:api && npm run setup:web",
    "setup:db": "docker-compose up -d postgres",
    "setup:api": "cd apps/api && npm install && npx prisma generate && npx prisma db push && npm run db:seed",
    "setup:web": "cd apps/web && npm install",
    "build": "npm run build:api && npm run build:web",
    "build:api": "cd apps/api && npm run build",
    "build:web": "cd apps/web && npm run build"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}

// apps/api/package.json
{
  "name": "teamx-api",
  "version": "1.0.0",
  "description": "TeamX Backend API",
  "scripts": {
    "build": "nest build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:prod": "node dist/main",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:seed": "ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/jwt": "^10.1.1",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/websockets": "^10.2.7",
    "@nestjs/platform-socket.io": "^10.2.7",
    "@nestjs/config": "^3.1.1",
    "@nestjs/throttler": "^5.0.1",
    "@prisma/client": "^5.6.0",
    "passport": "^0.6.0",
    "passport-local": "^1.0.0",
    "passport-jwt": "^4.0.1",
    "bcrypt": "^5.1.1",
    "class-validator": "^0.14.0",
    "class-transformer": "^0.5.1",
    "socket.io": "^4.7.4",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@types/node": "^20.3.1",
    "@types/bcrypt": "^5.0.1",
    "@types/passport-local": "^1.0.36",
    "@types/passport-jwt": "^3.0.10",
    "typescript": "^5.1.3",
    "prisma": "^5.6.0",
    "ts-node": "^10.9.1"
  }
}

// apps/api/tsconfig.json
{
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "ES2021",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./",
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": false,
    "noImplicitAny": false,
    "strictBindCallApply": false,
    "forceConsistentCasingInFileNames": false,
    "noFallthroughCasesInSwitch": false
  }
}

// apps/api/.env
PORT=4000
DATABASE_URL="postgresql://postgres:postgres123@localhost:5432/teamx_dev"
JWT_SECRET="teamx-dev-jwt-secret-change-in-production"
FRONTEND_URL="http://localhost:3000"

// apps/web/package.json
{
  "name": "teamx-web",
  "version": "1.0.0",
  "description": "TeamX Web Frontend",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "14.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^5.1.3",
    "@types/node": "^20.3.1",
    "@types/react": "^18.2.14",
    "@types/react-dom": "^18.2.6"
  },
  "devDependencies": {
    "tailwindcss": "^3.3.3",
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.24",
    "eslint": "^8.44.0",
    "eslint-config-next": "^14.0.0"
  }
}

// docker-compose.yml
version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: teamx_postgres
    environment:
      POSTGRES_DB: teamx_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
volumes:
  postgres_data:

// .env (Root)
NODE_ENV=development
DATABASE_URL="postgresql://postgres:postgres123@localhost:5432/teamx_dev"
JWT_SECRET="teamx-dev-jwt-secret-change-in-production"
FRONTEND_URL="http://localhost:3000"

// .gitignore
node_modules/
dist/
.env
.env.local
.next/
coverage/
*.log
.DS_Store
postgres_data/
redis_data/